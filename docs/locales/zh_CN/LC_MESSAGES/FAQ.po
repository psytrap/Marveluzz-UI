# SOME DESCRIPTIVE TITLE.
# Copyright (C) WangWeimin
# This file is distributed under the same license as the PyWebIO package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: PyWebIO 1.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-05 00:44+0800\n"
"PO-Revision-Date: 2021-10-05 15:53+0800\n"
"Last-Translator: WangWeimin <wang0.618@qq.com>\n"
"Language: zh_CN\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"X-Generator: Poedit 3.0\n"

#: ../../FAQ.rst:2
msgid "FAQ"
msgstr "常见问题"

#: ../../FAQ.rst:8
msgid ""
"How to make the input form not disappear after submission, and can continue "
"to receive input?"
msgstr "如何让输入框在提交后不消失，并可以持续性地输入"

#: ../../FAQ.rst:10
msgid ""
"You can consider the :doc:`pin <./pin>` module. It achieves persistent "
"input by pinning input widgets to the page."
msgstr "考虑使用 :doc:`pin <./pin>` 模块。"

#: ../../FAQ.rst:14
msgid "How to output an input widget such as a search bar?"
msgstr "如何输出一个诸如搜索栏的输入框"

#: ../../FAQ.rst:16
msgid "You can consider the :doc:`pin <./pin>` module."
msgstr "考虑使用 :doc:`pin <./pin>` 模块。"

#: ../../FAQ.rst:20
msgid "Why the callback of ``put_buttons()`` does not work?"
msgstr "为什么 ``put_buttons()`` 的回调不起作用"

#: ../../FAQ.rst:22
msgid ""
"You might use the old version of PyWebIO, upgrade it to the latest version "
"or see `the old document <https://pywebio.readthedocs.io/en/v1.3.3/FAQ."
"html>`_"
msgstr ""
"你应该用的是旧版本的PyWebIO，先将其升级为最近版本或查看 `旧版本文档  "
"<https://pywebio.readthedocs.io/en/v1.3.3/FAQ.html>`_"

#: ../../FAQ.rst:25
msgid "Why I cannot download the file using ``put_file()``?"
msgstr "为什么 ``put_file()`` 无法下载文件"

#: ../../FAQ.rst:27
msgid "The reason is the same as above."
msgstr "原因同上"

#~ msgid ""
#~ "The design of PyWebIO is that the input form is destroyed after "
#~ "successful submission. The input function of PyWebIO is blocking. Once "
#~ "the form is submitted, the input function returns. So it is meaningless "
#~ "to leave the form on the page after submission of form. If you want to "
#~ "make continuous input, you can put input and subsequent operations into "
#~ "a ``while`` loop."
#~ msgstr ""
#~ "PyWebIO 的设计就是输入表单在成功提交后就销毁，因为 PyWebIO 的输入是阻塞式"
#~ "的，一旦提交表单，输入函数就返回了，此时表单还留在界面上是没有意义的。如"
#~ "果想实现持续性的输入，可以将接收输入以及后续操作放到一个 ``while`` 循环"
#~ "中。"

#~ msgid ""
#~ "Unfortunately, PyWebIO does not support outputting input widget to the "
#~ "page as general output widget. Because this will make the input "
#~ "asynchronous, which is exactly what PyWebIO strives to avoid. Callbacks "
#~ "will increase the complexity of application development. PyWebIO does "
#~ "not recommend relying too much on the callback mechanism, so it only "
#~ "provides a little support. However, there is a compromise way to achieve "
#~ "similar behavior: just put a button (`put_buttons() <pywebio.output."
#~ "put_buttons>`) where the input widget needs to be displayed, and in the "
#~ "button's callback function, you can call the input function to get input "
#~ "and perform subsequent operations."
#~ msgstr ""
#~ "很遗憾，PyWebIO并不支持将输入框作为一般性的内容输出到页面。因为这样就相当"
#~ "于又回到了基于回调获取输入的方式了，会导致应用开发的复杂性提高，PyWebIO不"
#~ "太推荐过多依赖回调机制，所以对此仅提供了非常少的支持。\n"
#~ "不过也可以使用另一种方式实现近似的效果：只需要在需要显示输入框的地方放置"
#~ "一个button( `put_buttons() <pywebio.output.put_buttons>` )，然后在button"
#~ "的回调函数中调用输入函数来获取输入并进行后续操作。"

#~ msgid ""
#~ "In general, in Server mode, once the task function returns (or in Script "
#~ "mode, the script exits), the session closes. After this, the event "
#~ "callback will not work. You can call the `pywebio.session.hold()` "
#~ "function at the end of the task function (or script) to hold the "
#~ "session, so that the event callback will always be available before the "
#~ "browser page is closed by user."
#~ msgstr ""
#~ "一般情况下，在Server模式下，任务函数一旦返回(或在Script模式下，脚本运行结"
#~ "束)，会话就结束了，此时事件回调也将不起作用，可以在任务函数(或脚本)末尾处"
#~ "使用 `pywebio.session.hold()` 函数来将会话保持，这样在用户关闭浏览器页面"
#~ "前，事件回调将一直可用。 参见 :ref:`Server模式与Script模式 "
#~ "<server_and_script_mode>`"

#~ msgid ""
#~ "The reason is the same as above. The page needs to request server for "
#~ "data when the download button is clicked, so the download link will be "
#~ "unavailable after the session is closed. You can use the `pywebio."
#~ "session.hold()` function at the end of the task function to hold the "
#~ "session."
#~ msgstr ""
#~ "原因同上。 ``put_file()`` 的文件链接被点击后，也是需要和服务端通信获取文"
#~ "件数据的，所以会话关闭后下载链接会不可用。可以在任务函数末尾处使用 "
#~ "`pywebio.session.hold()` 函数来将会话保持。"
