# Copyright (C) Weimin Wang
# This file is distributed under the same license as the PyWebIO package.
#
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
# Pikhosh <pikhosh@gmail.com>, 2022.
msgid ""
msgstr ""
"Project-Id-Version: PyWebIO 1.5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-26 16:35+0330\n"
"PO-Revision-Date: 2022-02-28 14:20+0330\n"
"Last-Translator: Pikhosh <pikhosh@gmail.com>\n"
"Language-Team: Persian <>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fa\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Lokalize 21.12.2\n"

#: ../../outdate.rst:2
msgid "The outdated functions"
msgstr ""

#: ../../outdate.rst:4
msgid ""
"This section shows document of the deprecated functions in case you use "
"the previous version of PyWebIO."
msgstr ""

#: ../../outdate.rst:6
msgid ""
"Those functions still work in latest PyWebIO, however they may be removed"
" in future version."
msgstr ""

#: ../../outdate.rst:9
msgid "``output`` module"
msgstr ""

#: of pywebio.output.style:1
msgid "Customize the css style of output content"
msgstr ""

#: of pywebio.output.style:3
msgid "See :ref:`User Guide <style>` for new way to set css style for output."
msgstr ""

#: of pywebio.output.output pywebio.output.style pywebio.platform.page.seo
msgid "Parameters"
msgstr "پارامتر ها"

#: of pywebio.output.style:6
msgid "The output content can be a ``put_xxx()`` call or a list of it."
msgstr ""

#: of pywebio.output.style:8
msgid "css style string"
msgstr ""

#: of pywebio.output.output pywebio.output.style
msgid "Returns"
msgstr ""

#: of pywebio.output.style:9
msgid ""
"The output contents with css style added:  Note: If ``outputs`` is a list"
" of ``put_xxx()`` calls, the style will be set for each item of the list."
" And the return value can be used in anywhere accept a list of "
"``put_xxx()`` calls."
msgstr ""

#: of pywebio.output.style:9
msgid "The output contents with css style added:"
msgstr ""

#: of pywebio.output.style:11
msgid ""
"Note: If ``outputs`` is a list of ``put_xxx()`` calls, the style will be "
"set for each item of the list. And the return value can be used in "
"anywhere accept a list of ``put_xxx()`` calls."
msgstr ""

#: of pywebio.output.output pywebio.output.style
msgid "Example"
msgstr ""

#: of pywebio.output.style:16
msgid ""
"style(put_text('Red'), 'color:red')\n"
"\n"
"## ----\n"
"style([\n"
"    put_text('Red'),\n"
"    put_markdown('~~del~~')\n"
"], 'color:red')\n"
"\n"
"## ----\n"
"put_table([\n"
"    ['A', 'B'],\n"
"    ['C', style(put_text('Red'), 'color:red')],\n"
"])\n"
"\n"
"## ----\n"
"put_collapse('title', style([\n"
"    put_text('text'),\n"
"    put_markdown('~~del~~'),\n"
"], 'margin-left:20px'))"
msgstr ""

#: of pywebio.output.output:1
msgid "Placeholder of output"
msgstr ""

#: of pywebio.output.output:3
msgid ""
"See :ref:`User Guide <put_scope>` for new way to set css style for output."
msgstr ""

#: of pywebio.output.output:6
msgid ""
"``output()`` can be passed in anywhere that ``put_xxx()`` can passed in. "
"A handler it returned by ``output()``, and after being output, the "
"content can also be modified by the handler (See code example below)."
msgstr ""

#: of pywebio.output.output:9
msgid ""
"The initial contents to be output. The item is ``put_xxx()`` call, and "
"any other type will be converted to ``put_text(content)``."
msgstr ""

#: of pywebio.output.output:11
msgid "An OutputHandler instance, the methods of the instance are as follows:"
msgstr ""

#: of pywebio.output.output:13
msgid "``reset(*contents)`` : Reset original contents to ``contents``"
msgstr ""

#: of pywebio.output.output:14
msgid "``append(*contents)`` : Append ``contents`` to original contents"
msgstr ""

#: of pywebio.output.output:15
msgid ""
"``insert(idx, *contents)`` : insert ``contents`` into original contents."
msgstr ""

#: of pywebio.output.output
msgid ""
"when idx>=0, the output content is inserted before the element of the "
"``idx`` index."
msgstr ""

#: of pywebio.output.output
msgid ""
"when idx<0, the output content is inserted after the element of the "
"``idx`` index."
msgstr ""

#: of pywebio.output.output:20
msgid "Among them, the parameter ``contents`` is the same as ``output()``."
msgstr ""

#: of pywebio.output.output:24
msgid ""
"hobby = output(put_text('Coding'))  # equal to output('Coding')\n"
"put_table([\n"
"   ['Name', 'Hobbies'],\n"
"   ['Wang', hobby]      # hobby is initialized to Coding\n"
"])\n"
"## ----\n"
"\n"
"hobby.reset('Movie')  # hobby is reset to Movie\n"
"## ----\n"
"hobby.append('Music', put_text('Drama'))  # append Music, Drama to hobby\n"
"## ----\n"
"hobby.insert(0, put_markdown('**Coding**'))  # insert the Coding into the"
" top of the hobby"
msgstr ""

#: ../../outdate.rst:16
msgid "``session`` module"
msgstr ""

#: of pywebio.session.get_info:1
msgid "Get information about the current session"
msgstr ""

#: of pywebio.session.get_info:3
msgid "Use `info <pywebio.session.info>` instead."
msgstr ""

#: of pywebio.session.data:1
msgid "Get the session-local object of current session."
msgstr ""

#: of pywebio.session.data:4
msgid "Use `local <pywebio.session.local>` instead."
msgstr ""

#: ../../outdate.rst:23
msgid "``platform`` module"
msgstr ""

#: of pywebio.platform.page.seo:1
msgid ""
"Set the SEO information of the PyWebIO application (web page information "
"provided when indexed by search engines)"
msgstr ""

#: of pywebio.platform.page.seo:3
msgid "Application title"
msgstr ""

#: of pywebio.platform.page.seo:4
msgid "Application description"
msgstr ""

#: of pywebio.platform.page.seo:5
msgid "PyWebIO task function"
msgstr ""

#: of pywebio.platform.page.seo:7
msgid ""
"If ``seo()`` is not used, the `docstring "
"<https://www.python.org/dev/peps/pep-0257/>`_ of the task function will "
"be regarded as SEO information by default."
msgstr ""

#: of pywebio.platform.page.seo:9
msgid "``seo()`` can be used in 2 ways: direct call and decorator::"
msgstr ""

#: of pywebio.platform.page.seo:11
msgid ""
"@seo(\"title\", \"description\")\n"
"def foo():\n"
"    pass\n"
"\n"
"def bar():\n"
"    pass\n"
"\n"
"def hello():\n"
"    \"\"\"Application title\n"
"\n"
"    Application description...\n"
"    (A empty line is used to separate the description and title)\n"
"    \"\"\"\n"
"\n"
"start_server([\n"
"    foo,\n"
"    hello,\n"
"    seo(\"title\", \"description\", bar),\n"
"])"
msgstr ""

#: of pywebio.platform.page.seo:32
msgid "Use :func:`pywebio.config` instead."
msgstr ""

