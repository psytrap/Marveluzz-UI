# Copyright (C) Weimin Wang
# This file is distributed under the same license as the PyWebIO package.
#
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
# Pikhosh <pikhosh@gmail.com>, 2022.
msgid ""
msgstr ""
"Project-Id-Version: PyWebIO 1.5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-26 16:35+0330\n"
"PO-Revision-Date: 2022-02-28 14:38+0330\n"
"Last-Translator: Pikhosh <pikhosh@gmail.com>\n"
"Language-Team: Persian <>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fa\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Lokalize 21.12.2\n"

#: ../../libraries_support.rst:2
msgid "Libraries support"
msgstr "پشتیبانی کتابخانه ها"

#: ../../libraries_support.rst:7
msgid "Build stand-alone App"
msgstr "ساخت اپ مستقل"

#: ../../libraries_support.rst:8
msgid ""
"`PyInstaller <https://pyinstaller.readthedocs.io/en/stable/>`_ bundles a "
"Python application and all its dependencies into a folder or executable. "
"The user can run the packaged app without installing a Python interpreter"
" or any modules."
msgstr ""

#: ../../libraries_support.rst:10
msgid ""
"You can use PyInstaller to packages PyWebIO application into a stand-"
"alone executable or folder:"
msgstr ""

#: ../../libraries_support.rst:12
msgid "Create a pyinstaller spec (specification) file::"
msgstr ""

#: ../../libraries_support.rst:14
msgid "pyi-makespec <options> app.py"
msgstr ""

#: ../../libraries_support.rst:16
msgid "You need replace ``app.py`` to your PyWebIO application file name."
msgstr ""

#: ../../libraries_support.rst:18
msgid "Edit the spec file, change the ``datas`` parameter of ``Analysis``::"
msgstr ""

#: ../../libraries_support.rst:20
msgid ""
"from pywebio.utils import pyinstaller_datas\n"
"\n"
"a = Analysis(\n"
"    ...\n"
"    datas=pyinstaller_datas(),\n"
"    ..."
msgstr ""

#: ../../libraries_support.rst:27
msgid ""
"Build the application by passing the spec file to the pyinstaller "
"command::"
msgstr ""

#: ../../libraries_support.rst:29
msgid "pyinstaller app.spec"
msgstr ""

#: ../../libraries_support.rst:32
msgid ""
"If you want to create a one-file bundled executable, you need pass "
"``--onefile`` option in first step."
msgstr ""

#: ../../libraries_support.rst:34
msgid ""
"For more information, please visit: "
"https://pyinstaller.readthedocs.io/en/stable/spec-files.html"
msgstr ""

#: ../../libraries_support.rst:40
msgid "Data visualization"
msgstr "بصری سازی داده"

#: ../../libraries_support.rst:41
msgid "PyWebIO supports for data visualization with the third-party libraries."
msgstr ""

#: ../../libraries_support.rst:44
msgid "Bokeh"
msgstr ""

#: ../../libraries_support.rst:46
msgid ""
"`Bokeh <https://github.com/bokeh/bokeh>`_ is an interactive visualization"
" library for modern web browsers. It provides elegant, concise "
"construction of versatile graphics, and affords high-performance "
"interactivity over large or streaming datasets."
msgstr ""

#: ../../libraries_support.rst:48
msgid ""
"You can use ``bokeh.io.output_notebook(notebook_type='pywebio')`` in the "
"PyWebIO session to setup Bokeh environment. Then you can use "
"``bokeh.io.show()`` to output a boken chart::"
msgstr ""

#: ../../libraries_support.rst:51
msgid ""
"from bokeh.io import output_notebook\n"
"from bokeh.io import show\n"
"\n"
"output_notebook(notebook_type='pywebio')\n"
"fig = figure(...)\n"
"...\n"
"show(fig)"
msgstr ""

#: ../../libraries_support.rst:59
msgid "See related demo on :charts_demo_host:`bokeh demo </?app=bokeh>`"
msgstr ""

#: ../../libraries_support.rst:61
msgid ""
"In addition to creating ordinary charts, Bokeh can also build the Bokeh "
"applications by starting the `Bokeh server "
"<https://docs.bokeh.org/en/latest/docs/user_guide/server.html>`_. The "
"purpose of the Bokeh server is to make it easy for Python users to create"
" interactive web applications that can connect front-end UI events to "
"real, running Python code."
msgstr ""

#: ../../libraries_support.rst:63
msgid ""
"In PyWebIO, you can also use ``bokeh.io.show()`` to display a Bokeh App. "
"For the example, see `bokeh_app.py "
"<https://github.com/wang0618/PyWebIO/blob/dev/demos/bokeh_app.py>`_."
msgstr ""

#: ../../libraries_support.rst:65
msgid "Bokeh App currently is only available in the default Tornado backend"
msgstr ""

#: ../../libraries_support.rst:70
msgid "pyecharts"
msgstr ""

#: ../../libraries_support.rst:72
msgid ""
"`pyecharts <https://github.com/pyecharts/pyecharts>`_  is a python "
"plotting library which uses `Echarts "
"<https://github.com/ecomfe/echarts>`_ as underlying implementation."
msgstr ""

#: ../../libraries_support.rst:74
msgid ""
"In PyWebIO, you can use the following code to output the pyecharts chart "
"instance::"
msgstr ""

#: ../../libraries_support.rst:76
msgid ""
"# `chart` is pyecharts chart instance\n"
"pywebio.output.put_html(chart.render_notebook())"
msgstr ""

#: ../../libraries_support.rst:79
msgid ""
"See related demo on :charts_demo_host:`pyecharts demo </?app=pyecharts>`"
msgstr ""

#: ../../libraries_support.rst:86
msgid "plotly"
msgstr ""

#: ../../libraries_support.rst:88
msgid ""
"`plotly.py <https://github.com/plotly/plotly.py>`_ is an interactive, "
"open-source, and browser-based graphing library for Python."
msgstr ""

#: ../../libraries_support.rst:90
msgid ""
"In PyWebIO, you can use the following code to output the plotly chart "
"instance::"
msgstr ""

#: ../../libraries_support.rst:92
msgid ""
"# `fig` is plotly chart instance\n"
"html = fig.to_html(include_plotlyjs=\"require\", full_html=False)\n"
"pywebio.output.put_html(html)"
msgstr ""

#: ../../libraries_support.rst:96
msgid "See related demo on :charts_demo_host:`plotly demo </?app=plotly>`"
msgstr ""

#: ../../libraries_support.rst:101
msgid "pyg2plot"
msgstr ""

#: ../../libraries_support.rst:103
msgid ""
"`pyg2plot <https://github.com/hustcc/PyG2Plot>`_ is a python plotting "
"library which uses `G2Plot <https://github.com/antvis/G2Plot>`_ as "
"underlying implementation."
msgstr ""

#: ../../libraries_support.rst:105
msgid ""
"In PyWebIO, you can use the following code to output the pyg2plot chart "
"instance::"
msgstr ""

#: ../../libraries_support.rst:107
msgid ""
"# `chart` is pyg2plot chart instance\n"
"pywebio.output.put_html(chart.render_notebook())"
msgstr ""

#: ../../libraries_support.rst:110
msgid "See related demo on :charts_demo_host:`plotly demo </?app=pyg2plot>`"
msgstr ""

#: ../../libraries_support.rst:113
msgid "cutecharts.py"
msgstr ""

#: ../../libraries_support.rst:115
msgid ""
"`cutecharts.py <https://github.com/cutecharts/cutecharts.py>`_ is a hand "
"drawing style charts library for Python which uses `chart.xkcd "
"<https://github.com/timqian/chart.xkcd>`_ as underlying implementation."
msgstr ""

#: ../../libraries_support.rst:117
msgid ""
"In PyWebIO, you can use the following code to output the cutecharts.py "
"chart instance::"
msgstr ""

#: ../../libraries_support.rst:119
msgid ""
"# `chart` is cutecharts chart instance\n"
"pywebio.output.put_html(chart.render_notebook())"
msgstr ""

#: ../../libraries_support.rst:122
msgid ""
"See related demo on :charts_demo_host:`cutecharts demo </?app=cutecharts>`"
msgstr ""

