# Copyright (C) Weimin Wang
# This file is distributed under the same license as the PyWebIO package.
#
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
# Pikhosh <pikhosh@gmail.com>, 2022.
msgid ""
msgstr ""
"Project-Id-Version: PyWebIO 1.5.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-26 16:35+0330\n"
"PO-Revision-Date: 2022-02-28 14:33+0330\n"
"Last-Translator: Pikhosh <pikhosh@gmail.com>\n"
"Language-Team: Persian <>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Language: fa\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Lokalize 21.12.2\n"

#: ../../platform.rst:2
msgid "``pywebio.platform`` --- Deploy applications"
msgstr "``pywebio.platform`` --- دیپلوی کردن اپلیکیشن ها"

#: of pywebio.platform:1
msgid ""
"The ``platform`` module provides support for deploying PyWebIO "
"applications in different ways."
msgstr ""

#: of pywebio.platform:8
msgid ":ref:`Use Guide: Server mode and Script mode <server_and_script_mode>`"
msgstr ""

#: of pywebio.platform:10
msgid ""
":ref:`Advanced Topic: Integration with Web Framework "
"<integration_web_framework>`"
msgstr ""

#: of pywebio.platform:16
msgid "Directory Deploy"
msgstr "دیپلوی دایرکتوری"

#: of pywebio.platform:18
msgid ""
"You can use ``path_deploy()`` or ``path_deploy_http()`` to deploy the "
"PyWebIO applications from a directory. The python file under this "
"directory need contain the ``main`` function to be seen as the PyWebIO "
"application. You can access the application by using the file path as the"
" URL."
msgstr ""

#: of pywebio.platform:22
msgid ""
"Note that users can't view and access files or folders whose name begin "
"with the underscore in this directory."
msgstr ""

#: of pywebio.platform:24
msgid "For example, given the following folder structure::"
msgstr ""

#: of pywebio.platform:26
msgid ""
".\n"
"├── A\n"
"│   └── a.py\n"
"├── B\n"
"│   └── b.py\n"
"└── c.py"
msgstr ""

#: of pywebio.platform:33
msgid "All three python files contain ``main`` PyWebIO application function."
msgstr ""

#: of pywebio.platform:35
msgid ""
"If you use this directory in `path_deploy() "
"<pywebio.platform.path_deploy>`, you can access the PyWebIO application "
"in ``b.py`` by using URL ``http://<host>:<port>/A/b``. And if the files "
"have been modified after run `path_deploy() "
"<pywebio.platform.path_deploy>`, you can use ``reload`` URL parameter to "
"reload application in the file: ``http://<host>:<port>/A/b?reload``"
msgstr ""

#: of pywebio.platform:40
msgid ""
"You can also use the command ``pywebio-path-deploy`` to start a server "
"just like using `path_deploy() <pywebio.platform.path_deploy>`. For more "
"information, refer ``pywebio-path-deploy --help``"
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:1
#: pywebio.platform.path_deploy.path_deploy_http:1
msgid "Deploy the PyWebIO applications from a directory."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:3
msgid "The server communicates with the browser using WebSocket protocol."
msgstr ""

#: of pywebio.platform.httpbased.run_event_loop pywebio.platform.page.config
#: pywebio.platform.path_deploy.path_deploy
#: pywebio.platform.tornado.start_server
#: pywebio.platform.tornado_http.start_server
msgid "Parameters"
msgstr "پارامتر ها"

#: of pywebio.platform.path_deploy.path_deploy:5
msgid "Base directory to load PyWebIO application."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:6
msgid "The port the server listens on."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:7
msgid "The host the server listens on."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:8
msgid ""
"Whether to provide a default index page when request a directory, default"
" is ``True``. ``index`` also accepts a function to custom index page, "
"which receives the requested directory path as parameter and return HTML "
"content in string.  You can override the index page by add a `index.py` "
"PyWebIO app file to the directory."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:8
msgid ""
"Whether to provide a default index page when request a directory, default"
" is ``True``. ``index`` also accepts a function to custom index page, "
"which receives the requested directory path as parameter and return HTML "
"content in string."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:12
msgid ""
"You can override the index page by add a `index.py` PyWebIO app file to "
"the directory."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:13
msgid ""
"Directory to store the application static files. The files in this "
"directory can be accessed via ``http://<host>:<port>/static/files``. For "
"example, if there is a ``A/B.jpg`` file in ``static_dir`` path, it can be"
" accessed via ``http://<host>:<port>/static/A/B.jpg``."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:17
#: pywebio.platform.tornado.start_server:31
msgid ""
"The client can reconnect to server within ``reconnect_timeout`` seconds "
"after an unexpected disconnection. If set to 0 (default), once the client"
" disconnects, the server session will be closed."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy:20
msgid ""
"The rest arguments of ``path_deploy()`` have the same meaning as for "
":func:`pywebio.platform.tornado.start_server`"
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy_http:3
msgid "The server communicates with the browser using HTTP protocol."
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy_http:5
msgid ""
"The ``base``, ``port``, ``host``, ``index``, ``static_dir`` arguments of "
"``path_deploy_http()`` have the same meaning as for "
":func:`pywebio.platform.path_deploy`"
msgstr ""

#: of pywebio.platform.path_deploy.path_deploy_http:8
msgid ""
"The rest arguments of ``path_deploy_http()`` have the same meaning as for"
" :func:`pywebio.platform.tornado_http.start_server`"
msgstr ""

#: of pywebio.platform:50
msgid "Application Deploy"
msgstr "دیپلوی اپلیکیشن"

#: of pywebio.platform:52
msgid ""
"The ``start_server()`` functions can start a Python Web server and serve "
"given PyWebIO applications on it."
msgstr ""

#: of pywebio.platform:54
msgid ""
"The ``webio_handler()`` and ``webio_view()`` functions can be used to "
"integrate PyWebIO applications into existing Python Web project."
msgstr ""

#: of pywebio.platform:56
msgid ""
"The ``wsgi_app()`` and ``asgi_app()`` is used to get the WSGI or ASGI app"
" for running PyWebIO applications. This is helpful when you don't want to"
" start server with the Web framework built-in's. For example, you want to"
" use other WSGI server, or you are deploying app in a cloud environment. "
"Note that only Flask, Django and FastApi backend support it."
msgstr ""

#: of pywebio.platform:63
msgid ""
"Added the ``cdn`` parameter in ``start_server()``, ``webio_handler()`` "
"and ``webio_view()``."
msgstr ""

#: of pywebio.platform:67
msgid "Added the ``static_dir`` parameter in ``start_server()``."
msgstr ""

#: of pywebio.platform:71
msgid "Added the ``wsgi_app()`` and ``asgi_app()``."
msgstr ""

#: of pywebio.platform:74
msgid "Tornado support"
msgstr "پشتیبانی Tornado"

#: of pywebio.platform:76
msgid ""
"There are two protocols (WebSocket and HTTP) can be used to communicates "
"with the browser:"
msgstr ""

#: of pywebio.platform:79
msgid "WebSocket"
msgstr ""

#: of pywebio.platform.tornado.start_server:1
#: pywebio.platform.tornado_http.start_server:1
msgid ""
"Start a Tornado server to provide the PyWebIO application as a web "
"service."
msgstr ""

#: of pywebio.platform.tornado.start_server:3
msgid "The Tornado server communicates with the browser by WebSocket protocol."
msgstr ""

#: of pywebio.platform.tornado.start_server:5
msgid ""
"Tornado is the default backend server for PyWebIO applications, and "
"``start_server`` can be imported directly using ``from pywebio import "
"start_server``."
msgstr ""

#: of pywebio.platform.tornado.start_server:8
msgid ""
"PyWebIO application. Can be a task function, a list of functions, or a "
"dictionary. Refer to :ref:`Advanced topic: Multiple applications in "
"start_server() <multiple_app>` for more information.  When the task "
"function is a coroutine function, use :ref:`Coroutine-based session "
"<coroutine_based_session>` implementation, otherwise, use thread-based "
"session implementation."
msgstr ""

#: of pywebio.platform.tornado.start_server:8
msgid ""
"PyWebIO application. Can be a task function, a list of functions, or a "
"dictionary. Refer to :ref:`Advanced topic: Multiple applications in "
"start_server() <multiple_app>` for more information."
msgstr ""

#: of pywebio.platform.tornado.start_server:12
msgid ""
"When the task function is a coroutine function, use :ref:`Coroutine-based"
" session <coroutine_based_session>` implementation, otherwise, use "
"thread-based session implementation."
msgstr ""

#: of pywebio.platform.tornado.start_server:14
msgid ""
"The port the server listens on. When set to ``0``, the server will "
"automatically select a available port."
msgstr ""

#: of pywebio.platform.tornado.start_server:16
msgid ""
"The host the server listens on. ``host`` may be either an IP address or "
"hostname. If it’s a hostname, the server will listen on all IP addresses "
"associated with the name. ``host`` may be an empty string or None to "
"listen on all available interfaces."
msgstr ""

#: of pywebio.platform.tornado.start_server:19
msgid ""
"Tornado Server's debug mode. If enabled, the server will automatically "
"reload for code changes. See `tornado doc "
"<https://www.tornadoweb.org/en/stable/guide/running.html#debug-mode>`_ "
"for more detail."
msgstr ""

#: of pywebio.platform.tornado.start_server:21
msgid ""
"Whether to load front-end static resources from CDN, the default is "
"``True``. Can also use a string to directly set the url of PyWebIO static"
" resources."
msgstr ""

#: of pywebio.platform.tornado.start_server:23
msgid ""
"The directory to store the application static files. The files in this "
"directory can be accessed via ``http://<host>:<port>/static/files``. For "
"example, if there is a ``A/B.jpg`` file in ``static_dir`` path, it can be"
" accessed via ``http://<host>:<port>/static/A/B.jpg``."
msgstr ""

#: of pywebio.platform.tornado.start_server:27
msgid ""
"Whether to enable remote access, when enabled, you can get a temporary "
"public network access address for the current application, others can "
"access your application via this address."
msgstr ""

#: of pywebio.platform.tornado.start_server:30
#: pywebio.platform.tornado.start_server:49
msgid ""
"Whether or not auto open web browser when server is started (if the "
"operating system allows it) ."
msgstr ""

#: of pywebio.platform.tornado.start_server:33
msgid ""
"The allowed request source list. (The current server host is always "
"allowed) The source contains the protocol, domain name, and port part. "
"Can use Unix shell-style wildcards:   - ``*`` matches everything  - ``?``"
" matches any single character  - ``[seq]`` matches any character in *seq*"
"  - ``[!seq]`` matches any character not in *seq*   Such as: "
"``https://*.example.com`` 、 ``*://*.example.com``   For detail, see "
"`Python Doc <https://docs.python.org/zh-tw/3/library/fnmatch.html>`_"
msgstr ""

#: of pywebio.platform.tornado.start_server:33
msgid ""
"The allowed request source list. (The current server host is always "
"allowed) The source contains the protocol, domain name, and port part. "
"Can use Unix shell-style wildcards:"
msgstr ""

#: of pywebio.platform.tornado.start_server:37
msgid "``*`` matches everything"
msgstr ""

#: of pywebio.platform.tornado.start_server:38
msgid "``?`` matches any single character"
msgstr ""

#: of pywebio.platform.tornado.start_server:39
msgid "``[seq]`` matches any character in *seq*"
msgstr ""

#: of pywebio.platform.tornado.start_server:40
msgid "``[!seq]`` matches any character not in *seq*"
msgstr ""

#: of pywebio.platform.tornado.start_server:42
msgid "Such as: ``https://*.example.com`` 、 ``*://*.example.com``"
msgstr ""

#: of pywebio.platform.tornado.start_server:44
msgid ""
"For detail, see `Python Doc <https://docs.python.org/zh-"
"tw/3/library/fnmatch.html>`_"
msgstr ""

#: of pywebio.platform.tornado.start_server:45
msgid ""
"The validation function for request source. It receives the source string"
" (which contains protocol, host, and port parts) as parameter and return "
"``True/False`` to indicate that the server accepts/rejects the request. "
"If ``check_origin`` is set, the ``allowed_origins`` parameter will be "
"ignored."
msgstr ""

#: of pywebio.platform.tornado.start_server:50
msgid ""
"Max size of a websocket message which Tornado can accept. Messages larger"
" than the ``max_payload_size`` (default 200MB) will not be accepted. "
"``max_payload_size`` can be a integer indicating the number of bytes, or "
"a string ending with `K` / `M` / `G` (representing kilobytes, megabytes, "
"and gigabytes, respectively). E.g: ``500``, ``'40K'``, ``'3M'``"
msgstr ""

#: of pywebio.platform.tornado.start_server:55
msgid ""
"Additional keyword arguments passed to the constructor of "
"``tornado.web.Application``. For details, please refer: "
"https://www.tornadoweb.org/en/stable/web.html#tornado.web.Application.settings"
msgstr ""

#: of pywebio.platform.tornado.webio_handler:1
msgid ""
"Get the ``RequestHandler`` class for running PyWebIO applications in "
"Tornado. The ``RequestHandler`` communicates with the browser by "
"WebSocket protocol."
msgstr ""

#: of pywebio.platform.tornado.webio_handler:4
msgid ""
"The arguments of ``webio_handler()`` have the same meaning as for "
":func:`pywebio.platform.tornado.start_server`"
msgstr ""

#: of pywebio.platform:85
msgid "HTTP"
msgstr ""

#: of pywebio.platform.tornado_http.start_server:3
msgid "The Tornado server communicates with the browser by HTTP protocol."
msgstr ""

#: of pywebio.platform.tornado_http.start_server:5
msgid ""
"Session expiration time, in seconds(default 60s). If no client message is"
" received within ``session_expire_seconds``, the session will be "
"considered expired."
msgstr ""

#: of pywebio.platform.tornado_http.start_server:7
msgid ""
"Session cleanup interval, in seconds(default 120s). The server will "
"periodically clean up expired sessions and release the resources occupied"
" by the sessions."
msgstr ""

#: of pywebio.platform.tornado_http.start_server:9
msgid "Max size of a request body which Tornado can accept."
msgstr ""

#: of pywebio.platform.tornado_http.start_server:11
msgid ""
"The rest arguments of ``start_server()`` have the same meaning as for "
":func:`pywebio.platform.tornado.start_server`"
msgstr ""

#: of pywebio.platform.tornado_http.webio_handler:1
msgid ""
"Get the ``RequestHandler`` class for running PyWebIO applications in "
"Tornado. The ``RequestHandler``  communicates with the browser by HTTP "
"protocol."
msgstr ""

#: of pywebio.platform.tornado_http.webio_handler:4
msgid ""
"The arguments of ``webio_handler()`` have the same meaning as for "
":func:`pywebio.platform.tornado_http.start_server`"
msgstr ""

#: of pywebio.platform:92
msgid "Flask support"
msgstr "پشتیبانی Flask"

#: of pywebio.platform:94
msgid ""
"When using the Flask as PyWebIO backend server, you need to install Flask"
" by yourself and make sure the version is not less than ``0.10``. You can"
" install it with the following command::"
msgstr ""

#: of pywebio.platform:97
msgid "pip3 install -U flask>=0.10"
msgstr ""

#: of pywebio.platform:105
msgid "Django support"
msgstr "پشتیبانی Django"

#: of pywebio.platform:107
msgid ""
"When using the Django as PyWebIO backend server, you need to install "
"Django by yourself and make sure the version is not less than ``2.2``. "
"You can install it with the following command::"
msgstr ""

#: of pywebio.platform:110
msgid "pip3 install -U django>=2.2"
msgstr ""

#: of pywebio.platform:117
msgid "aiohttp support"
msgstr "پشتیبانی aiohttp"

#: of pywebio.platform:119
msgid ""
"When using the aiohttp as PyWebIO backend server, you need to install "
"aiohttp by yourself and make sure the version is not less than ``3.1``. "
"You can install it with the following command::"
msgstr ""

#: of pywebio.platform:122
msgid "pip3 install -U aiohttp>=3.1"
msgstr ""

#: of pywebio.platform:128
msgid "FastAPI/Starlette support"
msgstr "پشتیبانی FastAPI/Starlette"

#: of pywebio.platform:130
msgid ""
"When using the FastAPI/Starlette as PyWebIO backend server, you need to "
"install ``fastapi`` or ``starlette`` by yourself. Also other dependency "
"packages are required. You can install them with the following command::"
msgstr ""

#: of pywebio.platform:133
msgid "pip3 install -U fastapi starlette uvicorn aiofiles websockets"
msgstr ""

#: of pywebio.platform:140
msgid "Other"
msgstr "دیگر"

#: of pywebio.platform.page.config:1
msgid "PyWebIO application configuration"
msgstr ""

#: of pywebio.platform.page.config:3
msgid "Application title"
msgstr ""

#: of pywebio.platform.page.config:4
msgid "Application description"
msgstr ""

#: of pywebio.platform.page.config:5
msgid ""
"Application theme. Available themes are: ``dark``, ``sketchy``, "
"``minty``, ``yeti``. You can also use environment variable "
"``PYWEBIO_THEME`` to specify the theme (with high priority).  "
":demo_host:`Theme preview demo </theme>`  .. collapse:: Open Source "
"Credits      The dark theme is modified from ForEvolve's `bootstrap-dark "
"<https://github.com/ForEvolve/bootstrap-dark>`_.     The sketchy, minty "
"and yeti theme are from `bootswatch <https://bootswatch.com/4/>`_."
msgstr ""

#: of pywebio.platform.page.config:5
msgid ""
"Application theme. Available themes are: ``dark``, ``sketchy``, "
"``minty``, ``yeti``. You can also use environment variable "
"``PYWEBIO_THEME`` to specify the theme (with high priority)."
msgstr ""

#: of pywebio.platform.page.config:8
msgid ":demo_host:`Theme preview demo </theme>`"
msgstr ""

#: of pywebio.platform.page.config:12
msgid ""
"The dark theme is modified from ForEvolve's `bootstrap-dark "
"<https://github.com/ForEvolve/bootstrap-dark>`_. The sketchy, minty and "
"yeti theme are from `bootswatch <https://bootswatch.com/4/>`_."
msgstr ""

#: of pywebio.platform.page.config:15
msgid "The javascript code that you want to inject to page."
msgstr ""

#: of pywebio.platform.page.config:16
msgid ""
"The javascript files that inject to page, can be a URL in str or a list "
"of it."
msgstr ""

#: of pywebio.platform.page.config:17
msgid "The CSS style that you want to inject to page."
msgstr ""

#: of pywebio.platform.page.config:18
msgid "The CSS files that inject to page, can be a URL in str or a list of it."
msgstr ""

#: of pywebio.platform.page.config:20
msgid ""
"``config()`` can be used in 2 ways: direct call and decorator. If you "
"call ``config()`` directly, the configuration will be global. If you use "
"``config()`` as decorator, the configuration will only work on single "
"PyWebIO application function. ::"
msgstr ""

#: of pywebio.platform.page.config:25
msgid ""
"config(title=\"My application\")\n"
"\n"
"@config(css_style=\"* { color:red }\")\n"
"def app():\n"
"    put_text(\"hello PyWebIO\")"
msgstr ""

#: of pywebio.platform.page.config:31
msgid ""
"``title`` and ``description`` are used for SEO, which are provided when "
"indexed by search engines. If no ``title`` and ``description`` set for a "
"PyWebIO application function, the `docstring "
"<https://www.python.org/dev/peps/pep-0257/>`_ of the function will be "
"used as title and description by default::"
msgstr ""

#: of pywebio.platform.page.config:35
msgid ""
"def app():\n"
"    \"\"\"Application title\n"
"\n"
"    Application description...\n"
"    (A empty line is used to separate the description and title)\n"
"    \"\"\"\n"
"    pass"
msgstr ""

#: of pywebio.platform.page.config:43
msgid "The above code is equal to::"
msgstr ""

#: of pywebio.platform.page.config:45
msgid ""
"@config(title=\"Application title\", description=\"Application "
"description...\")\n"
"def app():\n"
"    pass"
msgstr ""

#: of pywebio.platform.page.config:51
msgid "add ``theme`` parameter"
msgstr ""

#: of pywebio.platform.httpbased.run_event_loop:1
msgid "run asyncio event loop"
msgstr ""

#: of pywebio.platform.httpbased.run_event_loop:3
msgid ""
"See also: :ref:`Integration coroutine-based session with Web framework "
"<coroutine_web_integration>`"
msgstr ""

#: of pywebio.platform.httpbased.run_event_loop:5
msgid ""
"Set the debug mode of the event loop. See also: "
"https://docs.python.org/3/library/asyncio-dev.html#asyncio-debug-mode"
msgstr ""

